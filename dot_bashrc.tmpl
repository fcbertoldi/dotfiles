# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth:erasedups

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=100000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

export EDITOR="emacsclient -t"

export VISUAL="$EDITOR"

export PAGER="less -i -S -K"

export CDPATH=".:$HOME"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color)
	color_prompt=yes;;
    *)
	if [ -x $(command -v tput) ] || [ $(tput -T"$TERM" colors) -gt 8 ]; then
	    color_prompt=yes
	fi
	;;
esac


# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi


if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\W\$ '
fi
unset color_prompt force_color_prompt


prompt_show_ec() {
 # Catch exit code
 ec=$?
 # Display exit code in red text unless zero
 if [ $ec -ne 0 ];then
  echo -e "\033[31;1m[$ec]\033[0m"
 fi
}

export PROMPT_COMMAND="prompt_show_ec; $PROMPT_COMMAND"



csv_to_sqlite() {
  local database_file_name="$1"
  local table_name="$2"
  sqlite3 -csv $database_file_name ".import '|cat -' $table_name"
}

# read markdown (.md) files in the terminal
md() { pandoc "$1" | lynx -stdin; }

pretty_csv() {
    mlr --icsv --opprint cat "$@" | less -F -S -K
}

load_dotenv() {
    set -o allexport
    . "$1"
    set +o allexport
}

docker-killall() {
    docker stop "$(docker ps -a -q)"
}

zipd() {
    outdir="$PWD"
    outname=$(basename "$1")
    pushd "$1"
    zip -r "${outdir}/${outname}.zip" *
    popd
}

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

{{ if eq .chezmoi.hostname .desktopHostname }}
export CDPATH="$CDPATH:$HOME/Dev"
{{ end }}
{{ if eq .chezmoi.os "windows" }}
export MSYS_PATH_SCOOP=1
export SCOOP_DIR="$HOME/scoop"
{{ end }}

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

if [ -f "$HOME/.env" ]; then
    load_dotenv "$HOME/.env"
fi

if [ -f "$HOME/.secrets.env" ]; then
    load_dotenv "$HOME/.secrets.env"
fi


[ -z "${WORKON_HOME:+x}" ] && export WORKON_HOME="$HOME/.virtualenvs"

if [ -z "${ORG_FILES_DIR:+x}" ] && [ -d "$HOME/Documents/org-files" ]; then
   export ORG_FILES_DIR="$HOME/Documents/org-files"
fi


# Use bat as a colorizing pager for man
# https://github.com/sharkdp/bat#man
if command -v bat &> /dev/null; then
   export MANPAGER="sh -c 'sed -u -e \"s/\\x1B\[[0-9;]*m//g; s/.\\x08//g\" | bat -p -lman'"
fi


# pew (better alternative to virtualenvwrapper)
command -v pew &> /dev/null && source $(pew shell_config)


# fzf shell integration
command -v fzf &> /dev/null && eval "$(fzf --bash)"

# vcpkg
export VCPKG_ROOT="$HOME/src/third-party/vcpkg"
if [ -d "$VCPKG_ROOT" ]; then
   export PATH="$VCPKG_ROOT:$PATH"
fi

#ASDF
if command -v asdf &> /dev/null; then
   export ASDF_DATA_DIR="$HOME/.asdf"
   export PATH="$ASDF_DATA_DIR/shims:$PATH"
   source <(asdf completion bash)
fi

command -v direnv &> /dev/null && eval "$(direnv hook bash)"

